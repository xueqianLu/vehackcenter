syntax = "proto3";

option go_package = "github.com/vehackcenter/hackcenter";

package hackcenter;

message Proposer {
    string proposer = 1;
    int32 index = 2;
}

message Block {
    Proposer proposer = 1;
    string hash = 2;
    int64 height = 3;
    int64 timestamp = 4;
    bytes data = 5;
}

message SubmitBlockResponse {
    string hash = 1;
}

message SubscribeBlockRequest {
    string proposer = 1;
}

message SubBroadcastTaskRequest {
    string proposer = 1;
}

message BeginToHackRequest {

}

message BeginToHackResponse {
    int64 height = 1;
}

message NodeRegisterInfo {
    string node = 1;
}

message NodeRegisterResponse {
    repeated string nodes = 1;
}

message FetchNodeRequest {
    string self = 1;
}

message FetchNodeResponse {
    repeated string nodes = 1;
}

message Empty {}
message VoteRequest {
    int64 block = 1;
}
message VoteResponse {
    int32 vote = 1;
}


message UpdateHackRequest {
    int64 begin = 1;
    int64 end = 2;
}

service CenterService {
    rpc SubmitBlock(Block) returns (SubmitBlockResponse);
    rpc SubscribeBlock(SubscribeBlockRequest) returns (stream Block);
    rpc SubBroadcastTask(SubBroadcastTaskRequest) returns (stream Block);
//    rpc BeginToHack(BeginToHackRequest) returns (BeginToHackResponse);
    rpc RegisterNode(NodeRegisterInfo) returns (NodeRegisterResponse);
    rpc FetchNode(FetchNodeRequest) returns (FetchNodeResponse);
    rpc Vote(VoteRequest) returns (VoteResponse);
    rpc SubscribeMinedBlock(SubscribeBlockRequest) returns (stream Block);
    rpc BroadcastBlock(Block) returns (SubmitBlockResponse);
    rpc UpdateHack(UpdateHackRequest) returns (Empty);
}
